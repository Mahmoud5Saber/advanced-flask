name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Cache Python Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m venv venv
          venv/bin/pip install --upgrade pip
          venv/bin/pip install --no-cache-dir --prefer-binary -r requirements.txt
          venv/bin/pip install --no-cache-dir --prefer-binary -r requirements-dev.txt

      - name: Start Flask app
        run: |
          venv/bin/python -m flask run --host=0.0.0.0 --port=5050 &
          sleep 5

      - name: Run Tests and Generate Coverage Report
        run: venv/bin/pytest --cov=app --cov-report=xml --junitxml=test-results.xml

      - name: Upload Test Results as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            coverage.xml
            test-results.xml

  security_scan:
    name: Run Trivy Security Scan
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Trivy Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "json"
          output: "trivy-results.json"

      - name: Upload Security Scan Report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results
          path: trivy-results.json

  performance_test:
    name: Run Locust Load Tests
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Locust
        run: pip install locust

      - name: Start Flask Application
        run: |
          nohup python app.py &  
          sleep 5 

      - name: Run Load Test with Debug
        run: locust --headless -u 10 -r 2 -t 1m --skip-log -H http://192.168.1.6:5050 -f locustfile.py --csv=locust-results

      - name: Upload Performance Test Report
        uses: actions/upload-artifact@v3
        with:
          name: locust-results
          path: locust-results*
